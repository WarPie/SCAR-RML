{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]
 Copyright (c) 2013, Jarl Holta (slacky).
 Contains parts taken from MSSL (By Janilabo).
 All rights reserved. Copying must include this header.
[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
const
  RS_Tab_Combat    = 0;
  RS_Tab_Stats     = 1;
  RS_Tab_Quests    = 2;
  RS_Tab_Inventory = 3;
  RS_Tab_Equipment = 4;
  RS_Tab_Prayer    = 5;
  RS_Tab_Magic     = 6;
  RS_Tab_Clan    = 7;
  RS_Tab_Friends = 8;
  RS_Tab_Ignores = 9;
  RS_Tab_Logout  = 10;
  RS_Tab_Options = 11;
  RS_Tab_Emotes  = 12;
  RS_Tab_Music   = 13;

var
  RS_InvSlotBounds:TBoxArray;
  RS_InvBounds: TBox; 
  
 
procedure RS_LoadGameTabs;
begin
  RS_InvBounds := Box(558,211,725,462);
  RS_InvSlotBounds := PartitionBoxEx(RS_InvBounds, 7, 4, -1);
end;


procedure RS_FreeGameTabs;
begin
  SetLength(RS_InvSlotBounds, 0);
end;
     
   
function __IDToTabBox(ID:Integer): TBox;
var row,col:Integer;
begin
  col := ID mod 7;
  row := ID div 7;
  Result.x1 := 530 + (Col * 32);
  Result.y1 := 170 + (Row * 300);
  Result.x2 := Result.x1 + 25;
  Result.y2 := Result.y1 + 25;
  Result.x1 := Result.x1 + 5;
  Result.y1 := Result.y1 + 5;
end; 



function RS_OpenTab(ID:Integer): Boolean;
var
  x,y,t:Integer;
  B:TBox;
begin
  Result := False;
  if (ID <= 13) then  
  begin
    B := __IDToTabBox(ID); 
    if FindColorsTol(x,y, [1910385,1054012,790059], B.x1,b.y1,b.x2,b.y2, 5) then 
    begin 
      Result := True;
      Exit;
    end; 
    MMouseClick(BoxCenter(B), 4, 12, mbLeft); 
    t := GetTimeRunning + 2000;
    while GetTimeRunning < t do
    begin
      if FindColorsTol(x,y, [1910385,1054012,790059], B.x1,b.y1,b.x2,b.y2, 5) then 
      begin 
        Result := True;
        Exit;
      end; 
    end;
  end;
end;

  
{*
 ...
*}
function RS_GetOpenTab: Integer;
var
  I,x,y:Integer;
  B:TBox;
begin
  Result := -1;
  for i:=0 to 13 do
  begin
    B := __IDToTabBox(I); 
    if FindColorsTol(x,y, [1910385,1054012,790059], B.x1,b.y1,b.x2,b.y2, 5) then 
    begin 
      Result := i;
      Exit;
    end; 
  end;
end;



{*
 ...
*}
function RS_OpenNextTab: Boolean;
var
  ID:Integer;
begin
  Result := True;
  ID := RS_GetOpenTab;
  WriteLn(ID);
  if (ID <= 12) then
    Result := RS_OpenTab(ID+1);
end;


{*
 ...
*}
function RS_OpenPrevTab: Boolean;
var
  ID:Integer;
begin
  Result := True;
  ID := RS_GetOpenTab;
  if (ID >= 1) then 
    Result := RS_OpenTab(ID-1);
end;


{*
 ...
*}
procedure RS_HoverTab(ID:Integer);
var B:TBox;
begin
  if (ID <= 13) then 
  begin
    B := __IDToTabBox(ID); 
    MMouseCircleEx(BoxCenter(B), 4, 12);   
  end;
end;



{$I GameTabs/Clan.scar}
{$I GameTabs/Emotes.scar}
{$I GameTabs/Friends.scar}
{$I GameTabs/Inventory.scar}
{$I GameTabs/Magic.scar}
{$I GameTabs/Options.scar}
{$I GameTabs/Quest.scar}
{$I GameTabs/Combat.scar}
{$I GameTabs/Equipment.scar}
{$I GameTabs/Ignores.scar}
{$I GameTabs/Logout.scar}
{$I GameTabs/Music.scar}
{$I GameTabs/Prayer.scar}
{$I GameTabs/Stats.scar}
