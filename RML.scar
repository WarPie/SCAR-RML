{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=]
 Copyright (c) 2013, Jarl Holta (slacky).
 Contains parts taken from MSSL (By Janilabo).
 All rights reserved. Copying must include this header.
[=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

var
  SelfDir,FontDir,BMPDir:String;

(*
 ..::: Level 1 :::..                                                              
 Core rutines that may be needed just about everywhere.                                           
*)
{$I SCARExt.scar}
{$I Src/Math.scar}
{$I Src/String.scar}
{$I Src/Box.scar}
{$I Src/Globals.scar}
{$I Src/Random.scar}
{$I Src/Mouse.scar}
{$I Src/Debug.scar}


(*
 ..::: Level 2 :::..                                                              
 OCR routines and rutiones that is not superspesific.                                            
*)
{$I Src/OCR.scar}
{$I Src/Chat.scar}
{$I Src/Animation.scar}
{$I Src/Object.scar}


(*
 ..::: Level 3 :::..                                                              
 Purely RS-Related stuff.                                       
*)
{$I Src/AntiBan.scar}
{$I Src/Login.scar}
{$I Src/Navigation.scar}
{$I Src/Minimap.scar}
{$I Src/GameTabs.scar}
{$I Src/Bank.scar}
{$I Src/Combat.scar}
{$I Src/World.scar}


(*
 Tries to activate the window containing RS (the java canvas).
 If posible it sets the client as well to this window, so no
 need to target runescape manually.
 If it succeed it will also click on the RS-screen to highlight
 it for input as well.
*)
procedure ActivateRSWindow;
var 
  Client: TSCARClient;
  Childs,Parents:THwndArray;
  RuneScape, Parent: LongWord;
  i,j,W,H,x,y:Integer;
  Found:Boolean;
  B: TBox;
begin
  Parents := FindWindowsEx(GetDesktopWindow,'Old School RuneScape','',False,False,True);
  for i:=0 to High(Parents) do
  begin 
    B := GetWindowBox(Parents[i]);
    W := B.x2 - B.x1 + 1;
    H := B.x2 - B.x1 + 1;
    if (W > 765) and (H > 503) then
    begin
      Childs := FindWindowsBySize(Parents[i],765,503,True);
      for j:=0 to High(childs) do
        if GetWindowClass(Childs[j]) = 'SunAwtCanvas' then 
        begin
          Parent := Parents[i];
          RuneScape := Childs[j];
          Found := True;
          Break; 
        end;
    end;
  end;
  if not(Found) then
  begin
    WriteLn('[RML] RuneScape not found. Select and highlight target manually');
    Exit;
  end; 
  ActivateWindow(RuneScape);   
  Client := TSCARWindowClient.Create(RuneScape);
  SetClient(Client); 
  Client.Update;
  case Random(3) of 
    0: MoveMouseBox(Box(720,10,760,145)); 
    1: MoveMouseBox(Box(520,10,560,145));
    2: begin 
        if (CountColorTol(1908322, 405,480,512,500, 35) >= 60) then 
        begin
          W := RS_GetOpenTab;
          RS_OpenTab(Random(6));
          Wait(500);
          RS_OpenTab(W);
        end else
          MoveMouseBox(Box(150,20,730,160));
       end;    
  end;
  GetMousePos(x,y); 
  ClickMouseEx(x,y,mbLeft,RandomG(64,25));
end;


(*
 Loads all neaded data in to memory. 
 This should always be called.
*)
procedure SetupRML;
var
  t: Integer;
begin
  t := GetTimeRunning; 
  
  SelfDir := IncludesPath + '\RML\';
  FontDir := SelfDir + 'Fonts\';
  BMPDir  := SelfDir + 'Bmps\';
  RS_LoadOCR; 
  RS_LoadMinimap
  RS_LoadLogin;
  RS_LoadBanking;
  RS_LoadGameTabs;
  
  t := GetTimeRunning - t;
  WriteLn('[RML] Successfully loaded in '+ IntToStr(t) +' ms');
end;


procedure FreeRML;
begin
  RS_FreeOCR;
  RS_FreeMinimap
  RS_FreeLogin;
  RS_FreeBanking;
  RS_FreeGameTabs;
  
  SelfDir := '';
  FontDir := '';
  BMPDir  := '';
end;